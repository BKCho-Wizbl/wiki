===========
快速入门
===========

.. contents:: Table of contents                                                           
  :depth: 1
  :local:


**当前测试网p2p版本：32（resources/config.conf:node.p2p.verson = 32）**

**1，从Github克隆下载JAVA-TRON远端仓库**

* 在Github上访问JAVA-TRON仓库

  地址： https://github.com/tronprotocol/java-tron

* 获取源码。我们使用git工具来获取源码。通过以下方式克隆仓库：

.. code-block:: shell

    git clone https://github.com/tronprotocol/java-tron.git

* 命令行中使用Git命令。请先在电脑上下载、安装并配置Git。 请查看链接 `set up git <https://help.github.com/articles/set-up-git/>`_ and `fork a repo <https://help.github.com/articles/fork-a-repo/>`_.

* 如果不熟悉使用Git命令，请下载并打开 `the project as a zip <https://github.com/tronprotocol/java-tron/archive/develop.zip>`_。

* Mac用户，请下载`Github for Mac <https://desktop.github.com/>`_ then `fork and clone our repository <https://guides.github.com/activities/forking/>`_.

**2，安装dependencies**

* 系统必须安装JDK 1.8。

* 对于Linux Ubuntu系统(比如：Ubuntu 16.04.4 LTS)，请务必下载`Oracle JDK 8 <https://www.digitalocean.com/community/tutorials/how-to-install-java-with-apt-get-on-ubuntu-16-04>`_ (不是 Open JDK 8)。

**3，下载并安装IntelliJ IDEA**

* 下载IDEA，开始运行项目。

* 继续操作直到顺利进入IntelliJ IDEA。

**4，通过IDEA运行JAVA-TRON**

* 选择'File' 进入已经克隆并下载完成的JAVA-TRON git项目目录。

    ``File`` -> ``New`` -> ``Project from existing sources...``;

* Highlight build.gradle and select 'OK'.
    
    ``java-tron/build.gradle``;

* Check the box that says "Use auto-import".

* Select the radio button that says "Use gradle wrapper task configuration".

* Ensure that "Gradle JVM" is set to an instance of JDK 1.8.

* Select "OK" to import JAVA-TRON into IDEA.

* IDEA will now begin to build the project (wait until finished doing stuff).

**5, Contribution**

Contributions are greatly welcomed. Please check `CONTRIBUTING.md <https://github.com/tronprotocol/java-tron/blob/develop/CONTRIBUTING.md>`__ for details on submitting patches and the contribution workflow.

**6, Servers**

+----------------+-----------------+---------------------+
| IP             | Location        | Description         |
+================+=================+=====================+
| 47.254.16.55   | Silicon Valley  | Witness Node        |
+----------------+-----------------+---------------------+
| 47.254.18.49   | Silicon Valley  | Witness Node        |
+----------------+-----------------+---------------------+
| 18.188.111.53  | Ohio            | Witness Node        |
+----------------+-----------------+---------------------+
| 54.219.41.56   | California      | Witness Node        |
+----------------+-----------------+---------------------+
| 35.169.113.187 | Virginia        | Witness Node        |
+----------------+-----------------+---------------------+
| 34.214.241.188 | Oregon          | Witness Node        |
+----------------+-----------------+---------------------+
| 47.254.146.147 | Frankfurt       | Witness Node        |
+----------------+-----------------+---------------------+
| 47.254.144.25  | Frankfurt       | Witness Node        |
+----------------+-----------------+---------------------+
| 47.91.246.252  | Hongkong        | Witness Node        |
+----------------+-----------------+---------------------+
| 47.91.216.69   | Hongkong        | Witness Node        |
+----------------+-----------------+---------------------+
| 39.106.220.120 | Beijing         | Witness Node        |
+----------------+-----------------+---------------------+
| 47.95.14.107   | Beijing         | Blockchain Explorer |
+----------------+-----------------+---------------------+

**7, Links**

* TRON Website: https://tron.network/
* GitHub: https://github.com/tronprotocol/java-tron/
* Community Telegram Group: https://t.me/tronnetworkEN/
* Slack Workspace: https://tronfoundation.slack.com/